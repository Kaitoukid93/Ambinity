<UserControl x:Class="adrilight.View.DeviceLightingControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:adrilight.View"
             mc:Ignorable="d" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:converters="clr-namespace:adrilight.Converter" 
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel" 
             d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}"
             Background="{DynamicResource RegionBrush}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            <DropShadowEffect x:Key="Item.SelectedActive.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource PrimaryBrush}}"/>
            <DropShadowEffect x:Key="Item.MouseOver.Border.Shadow" BlurRadius="10"   RenderingBias ="Quality" ShadowDepth ="1" Color ="{Binding Color, Source={StaticResource DarkMaskBrush}}"/>

            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border Margin="5,2" Padding="3" CornerRadius="4" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter HorizontalAlignment="Left" Width="15" Height="15"  Content="{TemplateBinding Icon}" Margin="5,5" />
                                    <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Content="{TemplateBinding Header}" Margin="5,5" />
                                </Grid>
                               
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background"  Value="{DynamicResource SecondaryRegionBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource PrimaryTextColor}"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels"
          Value="True" />
                <Setter Property="OverridesDefaultStyle"
          Value="True" />
                <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
                <Setter Property="HasDropShadow"
          Value="True" />
               
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border Margin="10" Effect="{DynamicResource EffectShadow3}" Padding="0"  x:Name="Border"
                Background="{StaticResource RegionBrush}"
                BorderThickness="0">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="Transparent" />
                                </Border.BorderBrush>
                                <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow"
                   Value="true">
                                    <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,3,0,3" />
                                    <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                    
                    
                </Setter>
            </Style>
            <Style x:Key="_ListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="4" Name="_Border"
                                Padding="0"
                                Margin="8"
                                Background="Transparent"   
                                BorderBrush="Transparent"
                                BorderThickness="3"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">

                                    <Setter TargetName="_Border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu  Style="{DynamicResource ContextMenuBaseStyle}">
                            <MenuItem Style="{DynamicResource MenuItemBaseStyle}" Header="Edit"
                                          Command="{Binding PlacementTarget.Tag.EditSelectedPaletteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                            </MenuItem>
                            <MenuItem Style="{DynamicResource MenuItemBaseStyle}" Header="Share"
                                          Command="{Binding PlacementTarget.Tag.ExportCurrentSelectedPaletteToFileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                            </MenuItem>
                            <MenuItem Style="{DynamicResource MenuItemBaseStyle}" Header="Delete"
                                          Command="{Binding PlacementTarget.Tag.DeleteSelectedPaletteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                            </MenuItem>
                        </ContextMenu>

                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="_ListBoxOutputsCollectionStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="7" Name="_Border"
                                Padding="0"
                                Margin="0,0,15,15"
                                Background="{DynamicResource RegionBrush}"   
                                BorderBrush="Transparent"
                                BorderThickness="3"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.SelectedActive.Border.Shadow}"/>
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>-->

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                    <Setter Property="Effect" TargetName="_Border" Value="{StaticResource Item.MouseOver.Border.Shadow}"/>
                                </MultiTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <MenuItem Command="{Binding PlacementTarget.Tag.LaunchPIDEditWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="ledsetup"  Header="LED Setup">
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource ledsetup}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                                
                                
                            </MenuItem>
                            <MenuItem Command="{Binding PlacementTarget.Tag.ImportPIDCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"  Header="Import LED Setup" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource import}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem  Command="{Binding PlacementTarget.Tag.ExportPIDCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Export LED Setup" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource export}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding PlacementTarget.Tag.ShowNameEditWindow, RelativeSource={RelativeSource AncestorType=ContextMenu}}" CommandParameter="rename"  Header="Rename" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource editname}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>
                           
                            <MenuItem CommandParameter="advance" Command="{Binding PlacementTarget.Tag.OpenAdvanceSettingWindowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Header="Advance Settings" >
                                <MenuItem.Icon>
                                    <Path   Data="{StaticResource advancesettings}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                </MenuItem.Icon>
                            </MenuItem>

                        </ContextMenu>

                    </Setter.Value>
                </Setter>
                <Setter Property="ContextMenuService.Placement" Value="Right">

                </Setter>
                <Setter Property="ContextMenuService.VerticalOffset" Value="0">

                </Setter>
                <Setter Property="ContextMenuService.HorizontalOffset" Value="5">

                </Setter>
            </Style>

            <Style x:Key="_listBoxGeneralModeSelectionStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="4" Name="_Border"
                                Padding="0"
                                Margin="5"
                                Background="Transparent"   
                                BorderBrush="{DynamicResource DarkMaskBrush}"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <!--<Setter Property="BorderBrush" TargetName="_Border" Value="{DynamicResource PrimaryBrush}"/>-->
                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource SecondaryRegionBrush}"/>



                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>


                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource SecondaryRegionBrush}"/>
                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <Setter Property="Background" TargetName="_Border" Value="{DynamicResource DarkMaskBrush}"/>

                                    <!--<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryBrush}"/>-->

                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid   Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>



        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            
            
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Margin="10" CornerRadius="7">
                    <Border.Background>
                        <SolidColorBrush Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>
                    </Border.Background>
                    <Path Margin="10" Data="{Binding CurrentDevice.Geometry, Converter={converters:StaticResourceConverter}}" Width="70" Height="70" Fill="{DynamicResource PrimaryBrush}" Stretch="Uniform" />
                </Border>
              
                <StackPanel Margin="10,5" Grid.Column="1">
                    <TextBlock HorizontalAlignment="Left" Margin="2" Style="{DynamicResource TextBlockTitle}" Text="{Binding CurrentDevice.DeviceName}" FontWeight="SemiBold"/>
                    <TextBlock FontSize="13" HorizontalAlignment="Left" Margin="2" Style="{DynamicResource TextBlockDefault}" Text="{Binding CurrentDevice.DeviceDescription}" />
                    <Button HorizontalAlignment="Left" Padding="0"    Style="{DynamicResource ButtonDefault}" Background="Transparent" BorderBrush="Transparent">
                        <Button.Content>
                            <TextBlock FontSize="13" Text="Rename" Style="{DynamicResource TextBlockDefaultPrimary}"/>
                        </Button.Content>
                    </Button>
                    
                </StackPanel>
            </Grid>
            <Grid Margin="0,0,50,0" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <hc:Badge  BadgeMargin="8,17,0,10" Status="{Binding IsSettingsUnsaved}"  Margin="0,0,0,0" Style="{DynamicResource BadgeDanger}">
                   
                
                <Button Click="ButtonProfile_OnClick" CommandParameter="connection" hc:BorderElement.CornerRadius="7" Margin="0,5,5,5" Height="65" VerticalAlignment="Stretch" HorizontalAlignment="Right" Padding="0"  BorderBrush="Transparent" Style="{DynamicResource ButtonDefault}" >
                  
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Path Width="30" Height="30" Margin="5,10" Data="{StaticResource profile}" Stretch="Uniform" >
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Fill" Value="{DynamicResource PrimaryBrush}"/>
                                </Style>
                            </Path.Style>

                        </Path>

                      
                        <Popup Effect="{DynamicResource EffectShadow3}"  AllowsTransparency="True" Grid.Column="2" Grid.ColumnSpan="2" PlacementTarget="{Binding ElementName=ButtonConfig}" HorizontalOffset="15" Name="profile_selection" VerticalOffset="6" StaysOpen="False">
                            <hc:TransitioningContentControl Effect="{DynamicResource EffectShadow3}" TransitionMode="Top2Bottom">
                                <Border  Margin="15,0,15,15" Background="{DynamicResource RegionBrush}" CornerRadius="7" BorderThickness="1">
                                    <StackPanel>
                                
                                        <Grid  >
                                            <StackPanel Orientation="Horizontal">
                                                <Button ToolTip="Create New Profile" Command="{Binding OpenProfileCreateCommand}" hc:IconElement.Width="15" hc:IconElement.Height="15" Style="{DynamicResource ButtonDefault}" BorderBrush="Transparent" hc:IconElement.Geometry="{StaticResource newfile}" Padding="6" Margin="5"/>
                                                <Button ToolTip="Import Profile" Command="{Binding ImportProfileCommand}" hc:IconElement.Width="15" hc:IconElement.Height="15" Style="{DynamicResource ButtonDefault}" BorderBrush="Transparent" hc:IconElement.Geometry="{StaticResource import}" Padding="6" Margin="5"/>
                                                <Button ToolTip="Export Profile" Command="{Binding ExportCurrentProfileCommand}" hc:IconElement.Width="15" hc:IconElement.Height="15" Style="{DynamicResource ButtonDefault}" BorderBrush="Transparent" hc:IconElement.Geometry="{StaticResource export}" Padding="6" Margin="5"/>
                                                    <hc:Badge  BadgeMargin="2" Status="{Binding IsSettingsUnsaved}"  Margin="0,0,0,0" Style="{DynamicResource BadgeDanger}">
                                                        <Button ToolTip="Save" Command="{Binding SaveCurrentProfileCommand}" hc:IconElement.Width="15" hc:IconElement.Height="15" Style="{DynamicResource ButtonDefault}" BorderBrush="Transparent" hc:IconElement.Geometry="{StaticResource save}" Padding="6" Margin="5"/>
                                                        </hc:Badge>
                                            </StackPanel>  
                                        </Grid>
                                        <hc:Divider Visibility="{Binding ElementName=Order,Path=Visibility}" LineStroke="{DynamicResource SecondaryRegionBrush}" Margin="5,5,5,5">

                                        </hc:Divider>
                                        <ListBox  SelectedItem="{Binding CurrentSelectedProfile}"  SelectedIndex="{Binding CurrentDevice.ActivatedProfileIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" SelectionChanged="NewModeSelected"  
                                                 ItemContainerStyle="{DynamicResource _listBoxGeneralModeSelectionStyle}"  
                                                 Background="Transparent"
                                                 BorderThickness="0"
                                                 ItemsSource="{Binding AvailableProfilesForCurrentDevice}"
                                                 Style="{DynamicResource StackPanelVerticalListBox}">

                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel>

                                                    </StackPanel>
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Margin="5">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path HorizontalAlignment="Left" Stretch="Uniform" Margin="5" Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                        <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="1" Text="{Binding Name}" Style="{DynamicResource TextBlockDefault}"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>

                                        </ListBox>
                                    </StackPanel>
                                    
                                </Border>
                            </hc:TransitioningContentControl>

                        </Popup>
                    
                    <Grid HorizontalAlignment="Left" Grid.Column="1">
                            <StackPanel HorizontalAlignment="Left">
                                <TextBlock HorizontalAlignment="Left" Text="{Binding CurrentSelectedProfile.Name,Mode=TwoWay}" Style="{DynamicResource TextBlockSubTitle}" FontWeight="SemiBold" Margin="5,2"/>
                                <TextBlock Text="{Binding CurrentSelectedProfile.Owner, Mode=TwoWay}" Style="{DynamicResource TextBlockDefaultPrimary}"  Margin="5,2" HorizontalAlignment="Left"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                  
                </Button>
                </hc:Badge>
            </Grid>
            <Grid Margin="0,0,50,0" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Command="{Binding OpenDeviceFirmwareSettingsWindowCommand}" CommandParameter="connection" hc:BorderElement.CornerRadius="7" Margin="0,5,5,5" Height="65" VerticalAlignment="Stretch" HorizontalAlignment="Right" Padding="0"  BorderBrush="Transparent" Style="{DynamicResource ButtonDefault}" >
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Path Width="30" Height="30" Margin="5,10" Data="{StaticResource hardware}" Stretch="Uniform" >
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Fill" Value="{DynamicResource PrimaryBrush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentDevice.IsTransferActive}" Value="False">
                                            <Setter Property="Fill" Value="{DynamicResource SecondaryTextBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </Path.Style>

                        </Path>

                        <Grid HorizontalAlignment="Left" Grid.Column="1">
                            <StackPanel HorizontalAlignment="Left">
                                <TextBlock HorizontalAlignment="Left" Text="{Binding CurrentDevice.DeviceType}" Style="{DynamicResource TextBlockSubTitle}" FontWeight="SemiBold" Margin="5,2"/>
                                <TextBlock Text="{Binding CurrentDevice.FirmwareVersion}" Style="{DynamicResource TextBlockDefaultPrimary}"  Margin="5,2" HorizontalAlignment="Left"/>
                              


                            </StackPanel>
                        </Grid>
                    </Grid>
                </Button>
            </Grid>
            <Grid Margin="0,0,100,0" Grid.Column="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Command="{Binding OpenDeviceConnectionSettingsWindowCommand}" CommandParameter="connection" hc:BorderElement.CornerRadius="7" Margin="0,5,5,5" Height="65" VerticalAlignment="Stretch" HorizontalAlignment="Right" Padding="0"  BorderBrush="Transparent" Style="{DynamicResource ButtonDefault}" >
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Path Width="30" Height="30" Margin="5,10" Data="{Binding CurrentDevice.DeviceConnectionGeometry, Converter={converters:StaticResourceConverter}}" Stretch="Uniform" >
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Fill" Value="{DynamicResource PrimaryBrush}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentDevice.IsTransferActive}" Value="False">
                                            <Setter Property="Fill" Value="{DynamicResource SecondaryTextBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </Path.Style>
                        
                        </Path>
                        
                        <Grid HorizontalAlignment="Left" Grid.Column="1">
                            <StackPanel HorizontalAlignment="Left">
                                <TextBlock HorizontalAlignment="Left" Text="{Binding CurrentDevice.OutputPort}" Style="{DynamicResource TextBlockSubTitle}" FontWeight="SemiBold" Margin="5,2"/>
                                <TextBlock Text="Connected" Style="{DynamicResource TextBlockDefaultPrimary}" Visibility="{Binding CurrentDevice.IsTransferActive,Converter={StaticResource boolToVisibilityConvert}}" Margin="5,2" HorizontalAlignment="Left"/>
                                <TextBlock Text="Disconnected"  Margin="5,2" HorizontalAlignment="Left">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockDefaultSecLight }">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding CurrentDevice.IsTransferActive}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>

                                        </Style>
                                       
                                    </TextBlock.Style>
                                </TextBlock>
                                
                               
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Button>
            </Grid>
            <Grid Grid.Column="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel VerticalAlignment="Center">
                    <Button Command="{Binding BackCommand}" Width="32" Height="32" Margin="10,10,10,10"  VerticalAlignment="Center" BorderThickness="2" HorizontalAlignment="Right" hc:IconElement.Geometry="{StaticResource esc}" Style="{DynamicResource ButtonIconCircular}" Foreground="{DynamicResource SecondaryTextBrush}"/>
                   
                </StackPanel>
               
            </Grid>
        </Grid>
           

        <Grid  Grid.Row="1"  ClipToBounds="true" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
            <Border Margin="10" Padding="15,15,0,15"  Background="{DynamicResource DarkOpacityBrush}" CornerRadius="7">
                <Grid VerticalAlignment="Top" x:Name="outputsCollectionGrid">
              
                    <hc:TransitioningContentControl Grid.Row="1">
                            <ListBox Background="Transparent"  ScrollViewer.CanContentScroll="True"
                                                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                  ItemContainerStyle="{DynamicResource _ListBoxOutputsCollectionStyle}" 
                                                  
                                                  x:Name="AvailableMPalette"
                                                  
                                                  BorderThickness="0"   
                                                  SelectedIndex="{Binding CurrentDevice.SelectedOutput}"
                                                  Style="{DynamicResource WrapPanelVerticalListBox}" 
                                                  ItemsPanel="{DynamicResource WrapPanelVerticalItemsPanelTemplate}" 
                                                  ItemsSource="{Binding CurrentDevice.AvailableOutputs}">

                                <ListBox.ItemTemplate >
                                    <DataTemplate >
                                        <Grid IsEnabled="{Binding IsConnected,Mode=TwoWay}" 
                                               x:Name="output" 
                                               Visibility="{Binding IsVissible,Converter={StaticResource boolToVisibilityConvert}}"         
                                               Width="255" 
                                               Height="57" >

                                            <!--<Button Visibility="{Binding IsDummy,Converter={StaticResource boolToVisibilityConvert}}" Command="{Binding Path=DataContext.ShowAddNewCommand, ElementName=itm}" hc:BorderElement.CornerRadius="30" Width="230" Height="260" Margin="0" hc:IconElement.Geometry="{DynamicResource AddGeometry}" hc:IconElement.Height="50" hc:IconElement.Width="50" Style="{DynamicResource ButtonDashedPrimary}">

                                            </Button>-->

                                            <Border
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                CornerRadius="7" 
                                                Background="{DynamicResource RegionBrush}">


                                                <Grid Margin="5">


                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="auto"/>

                                                    </Grid.ColumnDefinitions>
                                                    <!--on off button-->
                                                    <Grid Grid.Column="2">
                                                        <StackPanel Orientation="Horizontal">
                                                            <ToggleButton IsChecked="{Binding IsEnabled}" 
                                                                      BorderThickness="0"  
                                                                      Margin="0,0,18,0" 
                                                                      HorizontalAlignment="Right"
                                                                      VerticalAlignment="center"
                                                                      Grid.Row="0"
                                                                      Style="{StaticResource ToggleButtonSwitch}">
                                                            </ToggleButton>
                                                        </StackPanel>


                                                    </Grid>




                                                    <!--name and info -->
                                                    <Grid Grid.Column="1">
                                                        <StackPanel>
                                                            <TextBlock HorizontalAlignment="Left"  Margin="5,0,5,0"   Style="{DynamicResource TextBlockSubTitle}" Text="{Binding OutputName}"/>
                                                            <TextBlock  HorizontalAlignment="Left"  Margin="5,0,5,0"   Style="{DynamicResource TextBlockDefaultSecLight}" Text="{Binding OutputType}"/>
                                                        </StackPanel>

                                                    </Grid>

                                                    <!--Icon-->
                                                    <Border HorizontalAlignment="Left" VerticalAlignment="Center" Width="50" Height="50" CornerRadius="6" >
                                                        <!--<Border.Background>
                                                            <SolidColorBrush Color ="{Binding Color, Source={StaticResource PrimaryBrush}}" Opacity="0.1"/>
                                                        </Border.Background>-->
                                                        <Path Margin="5" Data="{Binding Geometry, Converter={converters:StaticResourceConverter}}" Width="32" Height="32" Fill="{StaticResource PrimaryBrush}" Stretch="Uniform" />
                                                    </Border>


                                                    <!--device information-->

                                                    <!--Big icon-->


                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                            </ListBox>
                        </hc:TransitioningContentControl>
                     

                    </Grid>
            </Border>
            <Border Padding="15" Margin="10" Grid.Column="1"  Background="{DynamicResource DarkOpacityBrush}" CornerRadius="7">
                <Grid VerticalAlignment="Center" HorizontalAlignment="Center"  ClipToBounds="true" Grid.Column="1" x:Name="MotherGrid">
               
                    <Viewbox  HorizontalAlignment="Center" VerticalAlignment="Center"  Name="PreviewBox">

                            <ItemsControl
                          Name="PreviewGird"  
                          BorderThickness="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center" 
                          ItemsSource="{Binding CurrentOutput.OutputLEDSetup.Spots,Mode=TwoWay}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas HorizontalAlignment="Center" VerticalAlignment="Top" Name="PreviewCanvas"
                               
                                Margin="0" 
                                Width="{Binding CurrentOutput.OutputRectangle.Width,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                Height="{Binding CurrentOutput.OutputRectangle.Height, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" >
                                        </Canvas>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemContainerStyle>
                                    <Style TargetType="ContentPresenter">
                                        <Setter Property="Canvas.Left" Value="{Binding Rectangle.X}"/>
                                        <Setter Property="Canvas.Top" Value="{Binding Rectangle.Y}"/>
                                    </Style>
                                </ItemsControl.ItemContainerStyle>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Rectangle ToolTip="{Binding id}" Stroke="OrangeRed" StrokeThickness="{Binding BorderThickness}" Width="{Binding Rectangle.Width,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Height="{Binding Rectangle.Height,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                <Rectangle.Fill>
                                                    <SolidColorBrush Color="{Binding OnDemandColor}"  />
                                                </Rectangle.Fill>
                                                <Rectangle.Style>
                                                    <Style TargetType="{x:Type Rectangle}">

                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Opacity"  Value="0.3"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Rectangle.Style>

                                                <!--<i:Interaction.Triggers>
                                                    -->
                                                <!--<i:EventTrigger EventName="MouseDown" >
                                                        <i:InvokeCommandAction Command="{Binding DataContext.SetNextSpotVIDCommand,RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}" />
                                                    </i:EventTrigger>-->
                                                <!--
                                                   
                                                </i:Interaction.Triggers>-->

                                            </Rectangle>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Viewbox>
                        <Canvas
                x:Name="dragSelectionCanvas"
                Visibility="Collapsed">
                            <Border  x:Name="dragSelectionBorder"
                     BorderBrush="Blue"
                     BorderThickness="2"
                     Background="LightBlue"
                     CornerRadius="1"
                     Opacity="0.5"/>
                        </Canvas>
                    
                    </Grid>
              </Border>
                </Grid>
       
        <Grid x:Name="DaughterGrid" Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border MaxWidth="700" MinHeight="380"   Height="auto" Margin="10"  Background="{DynamicResource DarkOpacityBrush}" CornerRadius="7">
                <StackPanel>



                    <Grid Margin="15" x:Name="mode_selection">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border  CornerRadius="7" Background="{DynamicResource RegionBrush}" Grid.Column="0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Path Stretch="Uniform" Margin="10" Data="{Binding CurrentSelectedLightingMode.Geometry,Converter={converters:StaticResourceConverter}}" 
                                      Width="35" 
                                      Height="35" 
                                      Fill="{DynamicResource PrimaryBrush}"/>
                                <TextBlock Style="{DynamicResource TextBlockTitleBold}" Margin="5,0,5,0" Grid.Column="1" Text="{Binding CurrentSelectedLightingMode.Name}" />
                                <Button Click="ButtonMode_OnClick"  hc:IconElement.Width="15" hc:IconElement.Height="15" Margin="10" BorderBrush="Transparent" Grid.Column="2" hc:IconElement.Geometry="{StaticResource comboboxbutton}" Foreground="{DynamicResource SecondaryRegionBrush}" Style="{DynamicResource ButtonDefault}">

                                </Button>
                                
                                <Popup Effect="{DynamicResource EffectShadow3}"  AllowsTransparency="True" Grid.Column="2" Grid.ColumnSpan="2" PlacementTarget="{Binding ElementName=ButtonConfig}" HorizontalOffset="15" Name="PopupMode" VerticalOffset="6" StaysOpen="False">
                                    <hc:TransitioningContentControl Effect="{DynamicResource EffectShadow3}" TransitionMode="Top2Bottom">
                                        <Border  Margin="15,0,15,15" Background="{DynamicResource RegionBrush}" CornerRadius="7" BorderThickness="1">
                                            <ListBox SelectedItem="{Binding CurrentSelectedLightingMode}" SelectedIndex="{Binding CurrentOutput.OutputSelectedMode}" SelectionChanged="NewModeSelected"  x:Name="lightingmode_selection"  
                                                 ItemContainerStyle="{DynamicResource _listBoxGeneralModeSelectionStyle}"  
                                                 Background="Transparent"
                                                 BorderThickness="0"
                                                 ItemsSource="{Binding AvailableLightingMode}"
                                                 Style="{DynamicResource StackPanelVerticalListBox}">

                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel>

                                                        </StackPanel>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Margin="5">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Path HorizontalAlignment="Left" Stretch="Uniform" Margin="5" Data="{Binding Geometry,Converter={converters:StaticResourceConverter}}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                            <TextBlock HorizontalAlignment="Left" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="1" Text="{Binding Name}" Style="{DynamicResource TextBlockDefault}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <!--<ListBoxItem>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path Stretch="Uniform" Margin="5" Data="{StaticResource screencapture}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                        <TextBlock Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="1" Text="SCREEN CAPTURE" Style="{DynamicResource TextBlockDefault}"/>
                                                    </Grid>
                                                </ListBoxItem>
                                                <ListBoxItem>
                                                    <Grid>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path Stretch="Uniform" Margin="5" Data="{StaticResource colorpalette}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                        <TextBlock Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"  Margin="5,0,5,0" Grid.Column="1" Text="COLOR PALETTE" Style="{DynamicResource TextBlockDefault}"/>
                                                    </Grid>
                                                </ListBoxItem>
                                                <ListBoxItem>
                                                    <Grid>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path Stretch="Uniform" Margin="5" Data="{StaticResource music}" 
                                                          Width="20" 
                                                          Height="20" 
                                                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                        <TextBlock Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"  Margin="5,0,5,0" Grid.Column="1" Text="MUSIC REACTIVE" Style="{DynamicResource TextBlockDefault}"/>
                                                    </Grid>
                                                </ListBoxItem>
                                                <ListBoxItem>
                                                    <Grid>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path Stretch="Uniform" Margin="5" Data="{StaticResource static}" 
                                                          Width="20" 
                                                          Height="20" 
                                                           Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                        <TextBlock Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"  Margin="5,0,5,0" Grid.Column="1" Text="STATIC COLOR" Style="{DynamicResource TextBlockDefault}"/>
                                                    </Grid>
                                                </ListBoxItem>
                                                <ListBoxItem>
                                                    <Grid>

                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path Stretch="Uniform" Margin="5" Data="{StaticResource canvas}" 
                                                          Width="20" 
                                                          Height="20" 
                                                          Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                                                        <TextBlock Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Margin="5,0,5,0" Grid.Column="1" Text="GIFXELATION" Style="{DynamicResource TextBlockDefault}"/>
                                                    </Grid>
                                                </ListBoxItem>-->




                                                <!--<RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{DynamicResource fullscreen }" IsChecked="{Binding CurrentOutput.OutputScreenCapturePosition,Mode=TwoWay}"  Style="{DynamicResource RadioButtonIcon}" Content="Full Screen"/>
                    <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{DynamicResource left }" IsChecked="{Binding IsLeftScreenRegionChecked,Mode=TwoWay}" Style="{DynamicResource RadioButtonIcon}" Content="Left"/>
                    <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource right}" IsChecked="{Binding IsRightScreenRegionChecked,Mode=TwoWay}" Content="Right" />
                    <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource up}" IsChecked="{Binding IsTopScreenRegionChecked,Mode=TwoWay}" Content="Top"/>
                    <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource down}" IsChecked="{Binding IsBottomScreenRegionChecked,Mode=TwoWay}" Content="Bottom"/>
                    <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" IsChecked="{Binding IsCustomScreenRegionChecked,Mode=TwoWay}" hc:IconElement.Geometry="{StaticResource custom}" Content="Custom"/>-->
                                            </ListBox>
                                        </Border>
                                    </hc:TransitioningContentControl>
                                   
                                </Popup>
                            </Grid>
                        </Border>

                    </Grid>
                    <Grid x:Name="ScreenCapture" >
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOutput.OutputSelectedMode}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <hc:TransitioningContentControl>
                            <local:ScreenCapturingControl  Margin="4">

                            </local:ScreenCapturingControl>

                        </hc:TransitioningContentControl>
                    </Grid>

                    <Grid x:Name="PaletteControlPanel"  >
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOutput.OutputSelectedMode}" Value="1">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <hc:TransitioningContentControl>
                            <local:ColorPaletteControl Margin="4">

                            </local:ColorPaletteControl>
                        </hc:TransitioningContentControl>
                    </Grid>

                    <Grid x:Name="MusicControlPanel" >
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOutput.OutputSelectedMode}" Value="2">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <hc:TransitioningContentControl>
                            <local:MusicControl Margin="4">

                            </local:MusicControl>
                        </hc:TransitioningContentControl>
                    </Grid>
                    <Grid x:Name="StaticColorControlPanel">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOutput.OutputSelectedMode}" Value="3">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <hc:TransitioningContentControl>
                            <local:StaticColorControl Margin="4">

                            </local:StaticColorControl>
                        </hc:TransitioningContentControl>
                    </Grid>

                </StackPanel>



            </Border>
            <Border MinHeight="360" Grid.Column="1" Margin="10" Background="{DynamicResource DarkOpacityBrush}" CornerRadius="7">
                <StackPanel>
                    <Grid x:Name="CaptureSidePanel" Margin="1" >
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOutput.OutputSelectedMode}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <hc:TransitioningContentControl>
                            <local:ScreenCapturingSidePanel>

                            </local:ScreenCapturingSidePanel>
                        </hc:TransitioningContentControl>
                    </Grid>
                    <Grid x:Name="PaletteSidePanel" Margin="1">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOutput.OutputSelectedMode}" Value="1">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <hc:TransitioningContentControl>
                            <local:ColorPaletteSidePanel>

                            </local:ColorPaletteSidePanel>
                        </hc:TransitioningContentControl>
                    </Grid>
                    <Grid x:Name="MusicSidePanel" Margin="1" >
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOutput.OutputSelectedMode}" Value="2">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <hc:TransitioningContentControl>
                            <local:MusicSidePanel>

                            </local:MusicSidePanel>
                        </hc:TransitioningContentControl>
                    </Grid>
                    <Grid x:Name="StaticColorSidePanel" Margin="1" >
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOutput.OutputSelectedMode}" Value="3">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <hc:TransitioningContentControl>
                            <local:StaticColorSidePanel>

                            </local:StaticColorSidePanel>
                        </hc:TransitioningContentControl>
                    </Grid>

                </StackPanel>
            </Border>
        </Grid>




    </Grid>
</UserControl>