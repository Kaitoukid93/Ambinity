<UserControl x:Class="adrilight.View.DeviceLightingControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:adrilight.View"
             mc:Ignorable="d" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:converters="clr-namespace:adrilight.Converter" 
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel" 
             d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}"
             Background="{DynamicResource RegionBrush}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="_ListBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border CornerRadius="2" Name="_Border"
                                Padding="0"
                                SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="_Border" Property="Background" Value="{DynamicResource VioletBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<Setter Property="ToolTip" Value="{Binding DocName}"/>-->
                <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBox}}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu Style="{DynamicResource ContextMenuBaseStyle}">
                            <MenuItem Style="{DynamicResource MenuItemBaseStyle}" Header="Edit"
                                          Command="{Binding PlacementTarget.Tag.EditSelectedPaletteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                            </MenuItem>
                            <MenuItem Style="{DynamicResource MenuItemBaseStyle}" Header="Share"
                                          Command="{Binding PlacementTarget.Tag.ExportCurrentSelectedPaletteToFileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                            </MenuItem>
                            <MenuItem Style="{DynamicResource MenuItemBaseStyle}" Header="Delete"
                                          Command="{Binding PlacementTarget.Tag.DeleteSelectedPaletteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                                          >
                            </MenuItem>
                        </ContextMenu>

                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid   Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Border Margin="10"  Background="{StaticResource DarkMaskBrush}" CornerRadius="7">
            
       
        <hc:SimplePanel   ClipToBounds="true" Grid.Row="0">
            

        <Grid x:Name="MotherGrid"  ClipToBounds="true" >
            <Viewbox HorizontalAlignment="Center" VerticalAlignment="Center"  Name="PreviewBox" 
                               
                 Margin="8">
                <ItemsControl   MouseDown="Window_MouseDown"
                                MouseUp="Window_MouseUp"
                                MouseMove="Window_MouseMove"
                          Name="PreviewGird"  
                          BorderThickness="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center" 
                          ItemsSource="{Binding CurrentDevice.AvailableOutputs[0].OutputLEDSetup.Spots}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas HorizontalAlignment="Center" VerticalAlignment="Center" Name="PreviewCanvas"
                               
                                Margin="0" 
                                Width="{Binding CurrentOutput.OutputPixelWidth}" 
                                Height="{Binding CurrentOutput.OutputPixelHeight}" >
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Rectangle.X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Rectangle.Y}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Rectangle Stroke="OrangeRed" StrokeThickness="{Binding BorderThickness}" Width="{Binding Rectangle.Width}" Height="{Binding Rectangle.Height}">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{Binding OnDemandColor}"  />
                                    </Rectangle.Fill>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown" >
                                            <i:InvokeCommandAction Command="{Binding DataContext.SetNextSpotVIDCommand,RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Rectangle>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Viewbox>
            <Canvas
                x:Name="dragSelectionCanvas"
                Visibility="Collapsed">
                <Border  x:Name="dragSelectionBorder"
                     BorderBrush="Blue"
                     BorderThickness="2"
                     Background="LightBlue"
                     CornerRadius="1"
                     Opacity="0.5"/>
            </Canvas>
        </Grid>
        </hc:SimplePanel>
        </Border>
        <Grid x:Name="DaughterGrid" Grid.Row="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border MaxWidth="600"   Height="auto" Margin="10"  Background="{StaticResource DarkMaskBrush}" CornerRadius="7">
                <StackPanel>
        
                        
                   
                    <hc:ButtonGroup x:Name="Fx"  Margin="8,8,8,8" Style="{DynamicResource ButtonGroupBaseStyle}">
                            <hc:ButtonGroup.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel>
                                        
                                    </WrapPanel>
                                </ItemsPanelTemplate>
                            </hc:ButtonGroup.ItemsPanel>
                        <RadioButton x:Name="ScreenCapture" BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{DynamicResource screencapture }"  Style="{DynamicResource RadioButtonIcon}" Content="Screen Capture"/>
                        <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{DynamicResource colorpalette }" Style="{DynamicResource RadioButtonIcon}" Content="Color Palette"/>
                        <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource music}" Content="Music Reactive" IsChecked="True"/>
                        <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource static}" Content="Static Color"/>
                        <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource canvas}" Content="Canvas"/>
                    </hc:ButtonGroup>
                    <hc:TransitioningContentControl Visibility="{Binding ElementName=ScreenCapture,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}" TransitionMode="Left2RightWithFade">
                        <local:ScreenCapturingControl  Margin="4">

                        </local:ScreenCapturingControl>

                    </hc:TransitioningContentControl>
                    
                </StackPanel>
                
              
             
                </Border>
            <Border Grid.Column="1" Margin="10" Background="{StaticResource DarkMaskBrush}" CornerRadius="7">
            <!--<StackPanel Height="300" 
                        hc:BorderElement.CornerRadius="30"  
                        Grid.Column="1"
                        x:Name="CollectionPanel">-->
                    <Grid Margin="1" Visibility="{Binding ElementName=ScreenCapture,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}">
                        <hc:TransitioningContentControl>
                            <local:ScreenCapturingSidePanel>

                            </local:ScreenCapturingSidePanel>
                        </hc:TransitioningContentControl>
                    </Grid>
                    

            <!--</StackPanel>-->
                </Border>
        </Grid>

      

       
    </Grid>
</UserControl>