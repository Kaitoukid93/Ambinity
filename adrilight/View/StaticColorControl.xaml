<UserControl x:Class="adrilight.View.StaticColorControl"
               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:adrilight.View"
             mc:Ignorable="d" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:converters="clr-namespace:adrilight.Converter" 
             xmlns:viewmodel="clr-namespace:adrilight.ViewModel" 
             d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}"
             >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">
                    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                    <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
                    <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </UserControl.Resources>
    <Grid>
        <StackPanel>
            <!--position-->
            <Grid x:Name="Mode">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBlock Margin="10" HorizontalAlignment="Left" Text="Color Mode" Style="{DynamicResource TextBlockTitleBold}"/>
                <StackPanel Grid.Row="1" Orientation="Horizontal">


                    <hc:ButtonGroup  x:Name="Fx"  Margin="8,8,8,8" Style="{DynamicResource ButtonGroupBaseStyle}">
                        <hc:ButtonGroup.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel>

                                </WrapPanel>
                            </ItemsPanelTemplate>
                        </hc:ButtonGroup.ItemsPanel>
                        <RadioButton IsChecked="{Binding IsStaticColorSolidChecked}" x:Name="static" BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{DynamicResource solidrect }"  Style="{DynamicResource RadioButtonIcon}" Content="Static"/>
                        <RadioButton IsChecked="{Binding IsStaticColorBreathingChecked}" x:Name="breathing" BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource breathing}" Content="Breathing" />
                        <RadioButton IsChecked="{Binding IsStaticColorSpectrumCyclingChecked}" x:Name="spectrumcycling" BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource spectrumcycling}"  Content="Spectrum Cycling"/>
                        <RadioButton IsChecked="{Binding IsStaticColorGradientChecked}" x:Name="atmosphere" BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource atmosphere}" Content="Atmosphere"/>
                        <!--<RadioButton IsChecked="True" x:Name="customCaptureZone" BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource custom}" Content="Custom"/>-->
                    </hc:ButtonGroup>
                    <!--<Grid Visibility="{Binding ElementName=customCaptureZone,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}">
                        <hc:TransitioningContentControl  TransitionMode="Left2Right">
                            <Button Command="{Binding LaunchPositionEditWindowCommand}" CommandParameter="edit"  Style="{DynamicResource ButtonDashedInfo}" Content="Edit" ToolTip="Launch Zone Editor" hc:IconElement.Geometry="{DynamicResource WindowRestoreGeometry}"/>
                        </hc:TransitioningContentControl>
                    </Grid>-->

                </StackPanel>
            </Grid>
            <Grid x:Name="Settings">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBlock Margin="10" HorizontalAlignment="Left" Text="Settings" Style="{DynamicResource TextBlockTitleBold}"/>
                <StackPanel Grid.Row="1" Orientation="Vertical">

                    <Grid  Visibility="{Binding ElementName=breathing,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}" Margin="10,0,0,0">
                      

                        <GroupBox HorizontalAlignment="Left"  Grid.Column="0" VerticalAlignment="Bottom"  Width="300" hc:TitleElement.TitleWidth="90" Header="Speed" Margin="5" Style="{DynamicResource GroupBoxOriginal}" HorizontalContentAlignment="Left" hc:TitleElement.TitlePlacement="Left">
                            <hc:PreviewSlider Grid.Column="1" Width="200" HorizontalAlignment="Left" Margin="0,0,0,0" Minimum="5" Maximum="30">
                                <hc:PreviewSlider.PreviewContent>
                                    <Label Style="{DynamicResource LabelBaseStyle}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0"/>
                                </hc:PreviewSlider.PreviewContent>
                            </hc:PreviewSlider>
                        </GroupBox>


                    </Grid>
                    <Grid Margin="10,0,0,0" Visibility="{Binding ElementName=static,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}">
                        <GroupBox HorizontalAlignment="Left"     VerticalAlignment="Bottom"   hc:TitleElement.TitleWidth="90" Header="Send Data"  Style="{DynamicResource GroupBoxOriginal}" HorizontalContentAlignment="Left" hc:TitleElement.TitlePlacement="Left" hc:TitleElement.VerticalAlignment="Center">
                            <hc:ButtonGroup  x:Name="datamode"   Style="{DynamicResource ButtonGroupBaseStyle}">
                                <hc:ButtonGroup.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel>

                                        </WrapPanel>
                                    </ItemsPanelTemplate>
                                </hc:ButtonGroup.ItemsPanel>
                                <RadioButton  BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{DynamicResource always }"  Style="{DynamicResource RadioButtonIcon}" Content="Always"/>
                                <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource colorchanged}" Content="When Color Changed" />

                            </hc:ButtonGroup>
                        </GroupBox>
                       
                    </Grid>
                    <Grid  Visibility="{Binding ElementName=spectrumcycling,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}" Margin="10,0,0,0">


                        <GroupBox HorizontalAlignment="Left" Grid.Column="0" VerticalAlignment="Bottom"  Width="300" hc:TitleElement.TitleWidth="90" Header="Speed" Margin="5" Style="{DynamicResource GroupBoxOriginal}" HorizontalContentAlignment="Left" hc:TitleElement.TitlePlacement="Left">
                            <hc:PreviewSlider Grid.Column="1" Width="200" HorizontalAlignment="Left" Margin="0,0,0,0" Minimum="5" Maximum="30">
                                <hc:PreviewSlider.PreviewContent>
                                    <Label Style="{DynamicResource LabelBaseStyle}" Content="{Binding Path=(hc:PreviewSlider.PreviewPosition),RelativeSource={RelativeSource Self}}" ContentStringFormat="#0"/>
                                </hc:PreviewSlider.PreviewContent>
                            </hc:PreviewSlider>
                        </GroupBox>


                    </Grid>
                    <Grid Margin="10,0,0,0" Visibility="{Binding ElementName=atmosphere,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}">
                        <GroupBox HorizontalAlignment="Left"     VerticalAlignment="Bottom"   hc:TitleElement.TitleWidth="90" Header="Position"  Style="{DynamicResource GroupBoxOriginal}" HorizontalContentAlignment="Left" hc:TitleElement.TitlePlacement="Left" hc:TitleElement.VerticalAlignment="Center">
                            <hc:ButtonGroup  x:Name="atmosMode"   Style="{DynamicResource ButtonGroupBaseStyle}">
                                <hc:ButtonGroup.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel>

                                        </WrapPanel>
                                    </ItemsPanelTemplate>
                                </hc:ButtonGroup.ItemsPanel>
                                <RadioButton  BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{DynamicResource fullspectrum }"  Style="{DynamicResource RadioButtonIcon}" Content="Full Cycle"/>
                                <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource first}" Content="First"/>
                                <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource last }" Content="Last"/>
                                <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource number}" Content="N Position"/>

                            </hc:ButtonGroup>
                        </GroupBox>

                    </Grid>
                    <StackPanel Orientation="Horizontal">


                        <!--<GroupBox hc:TitleElement.TitleWidth="100" Header="Device Order" Margin="15,15,0,4" Style="{DynamicResource GroupBoxOriginal}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" hc:TitleElement.TitlePlacement="Left">


                            <hc:ButtonGroup  x:Name="Wb"  Margin="10" Style="{DynamicResource ButtonGroupBaseStyle}">
                                <hc:ButtonGroup.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel>

                                        </WrapPanel>
                                    </ItemsPanelTemplate>
                                </hc:ButtonGroup.ItemsPanel>
                                <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{DynamicResource linear }"  Style="{DynamicResource RadioButtonIcon}" Content="Natural"/>
                                <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{DynamicResource fullspectrum }"   Style="{DynamicResource RadioButtonIcon}" Content="Full Spectrum"/>
                                <RadioButton BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource number}"  Content="Number"/>
                                <RadioButton x:Name="customWB" IsChecked="True" BorderBrush="{DynamicResource DarkMaskBrush}" hc:IconElement.Geometry="{StaticResource custom}" Foreground="{DynamicResource SuccessBrush}" Content="Custom"/>


                            </hc:ButtonGroup>

                        </GroupBox>
                        <Grid Visibility="{Binding ElementName=customWB,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}">
                            <hc:TransitioningContentControl Margin="0,15,15,4"  TransitionMode="Left2Right">
                                <Button   Style="{DynamicResource ButtonDashedInfo}" Content="Edit" ToolTip="Launch White Balance Editor" hc:IconElement.Geometry="{DynamicResource WindowRestoreGeometry}"/>
                            </hc:TransitioningContentControl>
                        </Grid>-->
                        <!--<GroupBox hc:TitleElement.TitleWidth="115" Header="Start Color" Margin="15,15,0,4" Style="{DynamicResource GroupBoxOriginal}" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" hc:TitleElement.TitlePlacement="Left">
                            <StackPanel Orientation="Horizontal">
                                <Path Margin="5" Data="{StaticResource solidrect}" 
                               Width="30" 
                               Height="30"  
                               Stretch="Fill">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource AccentColor}"/>
                                    </Path.Fill>
                                </Path>
                                <Grid Visibility="{Binding ElementName=customWB,Path=IsChecked,Converter={StaticResource boolToVisibilityConvert}}">
                                    <hc:TransitioningContentControl Margin="15,0,0,0"  TransitionMode="Left2Right">
                                        <Button   Style="{DynamicResource ButtonDashedInfo}" Content="Edit" ToolTip="Launch White Balance Editor" hc:IconElement.Geometry="{DynamicResource WindowRestoreGeometry}"/>
                                    </hc:TransitioningContentControl>
                                </Grid> 
                            </StackPanel>
                           
                        </GroupBox>-->
                        
                    </StackPanel>




                </StackPanel>
            </Grid>


            <!--smooth bind to smooth factor-->
            <!--fps bind to max fps-->
            <!--saturation threshold bind to saturation threshold-->
            <!-- contrast bind to linear lighting or non linear fading, thanks to Fabsenet-->

            <!-- Position editor - bind to launch position editor command -->
        </StackPanel>

    </Grid>

</UserControl>
