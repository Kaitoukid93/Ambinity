<UserControl x:Class="adrilight.View.AllDeviceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:adrilight.View"
             
             xmlns:converters="clr-namespace:adrilight.Converter"
             mc:Ignorable="d" 
              xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf" xmlns:viewmodel="clr-namespace:adrilight.ViewModel" d:DataContext="{d:DesignInstance Type=viewmodel:MainViewViewModel}"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"         
             Name="alldevice"
        FontFamily="{StaticResource MaterialDesignFont}"
             d:DesignHeight="800" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <converters:BrushToHexConverter x:Key="BrushToHexConverter" />
            <BooleanToVisibilityConverter x:Key="boolToVisibilityConvert" />
            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="Gold"/>
            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#21326CF3"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3F326CF3"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF326CF3"/>

            <Style x:Key="ListViewContainerStyle" TargetType="{x:Type ListViewItem}">
             
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Padding" Value="4,1"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Height" Value="auto"/>
                

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Margin="5" CornerRadius="40" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                    <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                    <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="ControlStyle.xaml">

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>

    </UserControl.Resources>
    <Grid Grid.Column="1" Margin="20,10,0,0" >

        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="191"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="7*"/>

        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Margin="10,0,0,0" Grid.Row="0" Grid.Column="0" Text="DASHBOARD"  FontSize="17" VerticalAlignment="Center" Foreground="Black" HorizontalAlignment="Left"/>
            <TextBlock Margin="10,0,0,0" Grid.Row="1" Grid.Column="0" Text="Tất cả các thiết bị đã từng được thêm sẽ xuất hiện ở đây. Click vào từng thẻ để điều chỉnh" FontSize="14" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground="#FF898989"/>
        </Grid>
        <Border Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" Height="32" HorizontalAlignment="Right" Width="95">
            <Button ToolTip="Thêm thiết bị theo cách thủ công" Foreground="#FF326CF3" Background="#3F326CF3" Content="Thêm mới" Style="{StaticResource MaterialDesignFlatButton}" Width="75" Height="32" VerticalAlignment="Center" BorderThickness="0" Padding="0"   materialDesign:ButtonAssist.CornerRadius="7" Command="{Binding ShowAddNewCommand}" HorizontalAlignment="Right" Margin="0,0,20,0"/>


        </Border>
        <Button ToolTip="Dò tìm thiết bị" Foreground="#FF326CF3" Background="#3F326CF3" Content="Refresh" Style="{StaticResource MaterialDesignFlatButton}" Width="66" Height="32" VerticalAlignment="Top" BorderThickness="0" Padding="0"   materialDesign:ButtonAssist.CornerRadius="7" Command="{Binding RefreshDeviceCommand}" HorizontalAlignment="Right" Margin="0,0,120,0" Grid.Column="1" Click="Button_Click"/>


        <Grid x:Name="parrentGrid" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">






            <ListView    Margin="0,15,0,15" Name="itm" ItemsSource="{Binding DisplayCards,UpdateSourceTrigger=PropertyChanged}"
                                                IsTabStop="False"
                         ItemContainerStyle="{StaticResource ListViewContainerStyle}"
                                                BorderThickness="0" Tag="{Binding}" Background="White">


                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Width="900"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.Template>
                    <ControlTemplate TargetType="{x:Type ItemsControl}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="False">
                            <hc:ScrollViewer>
                                <ItemsPresenter />
                            </hc:ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ListView.Template>


                <ListView.ItemTemplate>

                    <DataTemplate>
                  
                        <Grid x:Name="dev" Visibility="{Binding IsVissible,Converter={StaticResource boolToVisibilityConvert}}"  Margin="20" Width="230" Height="245" >



                            <Border Margin="-6"   CornerRadius="30" Background="Transparent">
                                <Border.Style>
                                    <Style TargetType="Border"  >
                                        <Setter Property="BorderBrush" Value="#FF898989"></Setter>
                                        <Setter Property="BorderThickness" Value="2"></Setter>
                                        <!--<Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="#7F326CF3"></Setter>
                                                <Setter Property="BorderThickness" Value="6"></Setter>
                                            </Trigger>
                                        </Style.Triggers>-->
                                    </Style>
                                </Border.Style>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectCardCommand, ElementName=itm}" CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid>
                                    <!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDown">
                                            <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectCardCommand, ElementName=itm}" CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="58*"/>
                                        <ColumnDefinition Width="15*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="22*"/>
                                        <RowDefinition Height="64*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton IsChecked="{Binding LEDOn}" Grid.Column="1" BorderBrush="#FF326CF3" BorderThickness="1"
                                     Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}"
                                     ToolTip="Bật/Tắt"
                                        Width="32" Height="32" Foreground="#FF326CF3" Background="#3F326CF3" HorizontalAlignment="Right" Margin="0,0,15,0">
                                        <materialDesign:PackIcon
                                      Kind="Power"
                                      Height="26"
                                      Width="26" />
                                    </ToggleButton>

                                    <Button BorderBrush="{x:Null}" BorderThickness="1"
  Style="{StaticResource MaterialDesignFlatButton}"
  ToolTip="Xóa Thiết bị" Command="{Binding Path=DataContext.DeleteDeviceCommand, ElementName=itm}" CommandParameter="{Binding}"
                    Grid.Column="0"
  Width="32" Height="32" Margin="0,0,5,0" Padding="0" Background="#33FD7E35" materialDesign:ButtonAssist.CornerRadius="7" Foreground="#FFFD7E35" VerticalAlignment="Center" HorizontalAlignment="Right">


                                        <materialDesign:PackIcon
    Kind="Close"
    Height="26"
    Width="26" />


                                    </Button>
                                    <Rectangle Margin="0,0,20,20" Grid.Column="1" Grid.Row="1" Fill="{Binding StaticColor,Converter={StaticResource ColorToBrushConverter}}" Width="19" Height="19" RadiusX="10" RadiusY="10" VerticalAlignment="Bottom" HorizontalAlignment="Right"/>

                                    <Grid Grid.Row="1" Grid.Column="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="13*"/>
                                            <RowDefinition Height="51*"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel  Margin="20,0,0,0" Grid.Row="1" Grid.ColumnSpan="1">
                                            <hc:RunningBlock BorderThickness="0" Padding="0"  Duration="0:0:9" Height="32" HorizontalAlignment="Left" AutoRun="True"  Width="150" Runaway="False" VerticalAlignment="Stretch" >
                                                <hc:RunningBlock.Content>
                                                    <TextBlock  Text="{Binding DeviceName}" FlowDirection="RightToLeft" FontSize="20" FontWeight="DemiBold"/>
                                                </hc:RunningBlock.Content>
                                                <hc:RunningBlock.Background>
                                                    <SolidColorBrush Color="White" Opacity="0.25" />
                                                </hc:RunningBlock.Background>
                                              
                                            </hc:RunningBlock>
                                            <TextBlock Padding="3" Text="{Binding DeviceType}" FontSize="14"/>
                                            <TextBlock Padding="3" Text="{Binding DevicePort}"/>
                                            <TextBlock Padding="3" Text="{Binding DeviceID, StringFormat=Device ID : {0}}"/>
                                            <TextBlock Padding="3" Text="{Binding Brightness,StringFormat=Độ sáng : {0}%}"/>
                                        </StackPanel>


                                    </Grid>
                                    <!--<ListBox Grid.Row="2" Visibility="{Binding IsHUB,Converter={StaticResource boolToVisibilityConvert}}">
                                        <ListBox.Resources>
                                            <CollectionViewSource x:Key="allDevice" Source="{Binding ChildCard}" />
                                        </ListBox.Resources>
                                        <ListBox.ItemsSource>
                                            <CompositeCollection>
                                                <CollectionContainer Collection="{Binding Source={StaticResource allDevice}}" />

                                                <ListBoxItem Foreground="Red" Width="30" Height="30">
                                                    <materialDesign:PackIcon Kind="AddBox"></materialDesign:PackIcon>
                                                </ListBoxItem>
                                            </CompositeCollection>
                                        </ListBox.ItemsSource>

                                         Here you can customize everything you want 
                                    </ListBox>-->
                                </Grid>
                            </Border>
                        </Grid>


                    </DataTemplate>
                </ListView.ItemTemplate>
                <!--<ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>-->
            </ListView>


        </Grid>

    </Grid>

</UserControl>
